//20231114 - simple arduino code to robotic orthesis (hand grip) controlled by myoelectric signal
//3D model available in https://www.thingiverse.com/thing:66818
//3D case model available in https://www.thingiverse.com/thing:2131085
//myoelectrical signal sensor (EMG) available in //https://github.com/LENeR-UEL/AD8232_aquisition_circuit 


#include <Servo.h> 
Servo myservo;
const int th = 200;

#include <ArduinoJson.h>
#include <math.h>
#include <filters.h> // available in: https://github.com/MartinBloedorn/libFilter
int grip=0;

//MES
float MESgrip= 0;
float MValue=0; //MES - Myo Electrical Signal
float Voltage;
float x = 0;
float filteredval[50];



float MES01=0;
float MES02=0;
float MES03=0;
float MES04=0;
float MES05=0;

float MES_X=0; 
float MES1=0;
float MES2=0;
float MESth=0;

float MES_001A=0;
float MES_001B=0;
float MES_002A=0;
float MES_002B=0;

//MES Filter
const float f2   = 40.0;  //Cutoff frequency in Hz
const float f1   = 10.0;  //Cutoff frequency in Hz
const float sampling_time = 0.01; //Sampling time in seconds.
IIR::ORDER  order  = IIR::ORDER::OD3; // Butterworth - Oder (OD1 to OD4)
IIR::TYPE typeHP =  IIR::TYPE::HIGHPASS;
Filter fHP(f1, sampling_time, order, typeHP); //configure high pass filter (40 Hz)
Filter fLP(f2, sampling_time, order); //configure low pass filter (10 Hz)

void setup() 
{ 
  myservo.attach(10);
    Serial.begin(9600);
    myservo.write(150);
MValue = (analogRead(A0)); //MES
} 

void MES_00()  //read samples
{
  for (int i = 0; i < 50; i++) {
    MValue = (analogRead(A7));
    Voltage = ((((3.3 / 1024.0) * (MValue))));
    filteredval[i] = fLP.filterIn(Voltage);
    filteredval[i] = fHP.filterIn(filteredval[i]);
    filteredval[i] = abs(filteredval[i]);
    filteredval[i] = filteredval[i] * 100;
    delay(1);
  }



 //10ms average -  build AWL to calculate the threshold
  MES01 = (filteredval[0] + filteredval[1] + filteredval[2] + filteredval[3] + filteredval[4] + filteredval[5] + filteredval[6] + filteredval[7] + filteredval[8] + filteredval[9]) / 10;

  //10ms average -  build AWL to calculate the threshold
  MES02 = (filteredval[10] + filteredval[11] + filteredval[12] + filteredval[13] + filteredval[14] + filteredval[15] + filteredval[16] + filteredval[17] + filteredval[18] + filteredval[19]) / 10;

  //10ms average -  build AWL to calculate the threshold
  MES03 = (filteredval[20] + filteredval[21] + filteredval[22] + filteredval[23] + filteredval[24] +  filteredval[25] + filteredval[26] + filteredval[27] + filteredval[28] + filteredval[29]) / 10;

  //10ms average -  build AWL to calculate the threshold
  MES04 = (filteredval[30] + filteredval[31] + filteredval[32] + filteredval[33] + filteredval[34] + filteredval[35] + filteredval[36] + filteredval[37] + filteredval[38] + filteredval[39]) / 10;

  //10ms average -  build AWL to calculate the threshold
  MES05 = (filteredval[40] + filteredval[41] + filteredval[42] + filteredval[43] + filteredval[44] + filteredval[45] + filteredval[46] + filteredval[47] + filteredval[48] + filteredval[49]) / 10;


MES01 = MES01*10; //inserted 2022 - if use other EMG sensor, the gain must be adjusted
MES02 = MES02*10; //inserted 2022 - if use other EMG sensor, the gain must be adjusted
MES03 = MES03*10; //inserted 2022 - if use other EMG sensor, the gain must be adjusted
MES04 = MES04*10; //inserted 2022 - if use other EMG sensor, the gain must be adjusted
MES05 = MES05*10; //inserted 2022 - if use other EMG sensor, the gain must be adjusted

//MES_X - create average 50ms (like root mean square)
MES_X = (MES01+MES02+MES03+MES04+MES05)/50;
} //Depend the MES sensor (EMG), the value must be adjusted!

void loop() 
{ 

//MES1 - RMS-100ms
MES_00();
MES_001A=MES_X;//50ms
MES_00();
MES_001B=MES_X;//50ms
MES1=(MES_001A+MES_001B)/2;

//MES2 - RMS-100ms
MES_00();
MES_002A=MES_X;//50ms
MES_00();
MES_002B=MES_X;//50ms
MES2=(MES_002A+MES_002B)/2;

//configure moving threshold 

MESgrip= (((MES1+MES2)/2)*16);

Serial.println(MESgrip);

grip= 220-MESgrip;
if (grip>120) {grip=150;}

//if (grip>150 && grip<160) {grip=160;}

if (grip>100 && grip<120) {grip=100;}

if (grip<100) {grip=22;}

myservo.write(grip);
delay(400);
}

//end
